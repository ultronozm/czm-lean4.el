#+title: czm-lean4.el: Some embellishments for lean4-mode
#+author: Paul Nelson

* Overview
This package collects features that I'm using in conjunction with [[https://github.com/ultronozm/lean4-mode][(my fork of bustercopley's fork of) lean4-mode]].  (The new feature of my fork is to provide hover docs for the info view.)

1. Reasonable values for =beginning-of-defun-function= and =end-of-defun-function=, so that =beginning-of-defun= (=C-M-a=), =end-of-defun= (=C-M-e=) and =narrow-to-defun= (=C-x n d=) work.
2. Reasonable values for =outline-regexp= and =outline-level=, so that [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Outline-Mode.html][Outline mode]] works.
3. A command for displaying the active namespace/section/variable declarations.
4. (Taken from https://github.com/leanprover/lean4-mode/issues/22) A command for temporarily pausing the info display.
5. Commands for searching the appropriate Mathlib folder (via consult-ripgrep), either for all text or just theorem-like headings.
6. A command for inserting sections/namespaces, or wrapping a region with those, and similarly for comment blocks.
7. A command for displaying the info buffer below the current window (rather than the default behavior, to the side - I often prefer one over the other).
8. Line wrapping for the goal window, with visual indicators where it wraps.
9. Commands for cycling delimiters, ( -> { -> [ -> ( -> ... and in reverse.
10. Commands that help format code according to the [[https://leanprover-community.github.io/contribute/style.html][Mathlib conventions]].
11. Toggleable and live in-buffer proof state overlays, for when you want to see the goal but don't feel like having the info window open.  Use =M-x czm-lean4-toggle-goal-overlay= and =M-x czm-lean4-live-goal-mode=.
   

* Configuration
This package requires [[https://github.com/leanprover/lean4-mode][lean4-mode]], so install that first.

Download this repository, install using =M-x package-install-file= (or package-vc-install, straight, elpaca, ...), and add something like the following to your [[https://www.emacswiki.org/emacs/InitFile][init file]]:
#+begin_src elisp
(use-package czm-lean4
  :after lean4-mode
  :hook (lean4-mode . czm-lean4-mode-hook)
  :hook (magit-section-mode . czm-lean4-magit-section-mode-hook)
  :bind (:map lean4-mode-map
              ("C-c v" . czm-lean4-show-variables)
              ("C-c C-p C-p" . czm-lean4-toggle-info-pause)
              ("C-c m m" . czm-lean4-search-mathlib)
              ("C-c m h" . czm-lean4-search-mathlib-headings)
              ("C-c C-o" . czm-lean4-toggle-info-split-below))
  :config
  (advice-add 'lean4-info-buffer-redisplay :around #'czm-lean4-info-buffer-redisplay))
#+end_src

Customize the binds as you like, and use the built-in documentation (=C-h f czm-lean4-whatever=) to see exactly what the commands do.

* More configuration
Here's my complete lean4-related configuration, which contains other tweaks that seemed best left out of this package.

#+begin_src elisp
(use-package lean4-mode
  :elpaca (:host github :repo "ultronozm/lean4-mode"
                 :files ("*.el" "data"))
  :hook (lean4-mode . spout-mode)
  :hook (lean4-mode . company-mode)
  :commands (lean4-mode)
  :custom
  (lean4-keybinding-lean4-toggle-info (kbd "C-c C-y"))
  (lean4-info-plain nil)
  :bind (:map lean4-mode-map
              ("RET" . newline)
              ("C-j" . default-indent-new-line)
              ("C-M-i" . company-indent-or-complete-common))
  :config
  :defer t)

(use-package czm-lean4
  :elpaca (:host github :repo "ultronozm/czm-lean4.el"
                 :depth nil)
  :after lean4-mode
  :hook (lean4-mode . czm-lean4-mode-hook)
  :hook (magit-section-mode . czm-lean4-magit-section-mode-hook)
  :bind (:map lean4-mode-map
              ("C-c v" . czm-lean4-show-variables)
              ("C-c C-p C-p" . czm-lean4-toggle-info-pause)
              ("C-c C-m C-m" . czm-lean4-search-mathlib)
              ("C-c C-m C-h" . czm-lean4-search-mathlib-headings)
              ("C-c C-," . czm-lean4-insert-section-or-namespace)
              ("C-c C-." . czm-lean4-insert-comment-block)
              ("C-c C-i" . czm-lean4-toggle-info-split-below)
              ("C-c C-o" . czm-lean4-toggle-info-split-right)
              ("M-]" . czm-lean4-cycle-delimiter-forward)
              ("ยง" . copilot-accept-completion)
              ("M-ยง" . copilot-accept-completion-by-word)
              ("C-ยง" . copilot-accept-completion-by-line)
              ("C-M-ยง" . copilot-accept-completion-by-paragraph)
              ("M-[" . czm-lean4-cycle-delimiter-backward))
  :custom
  (czm-lean4-info-window-height-fraction 0.4)
  (czm-lean4-info-window-width-fraction 0.47)
  :config
  (advice-add 'lean4-info-buffer-redisplay :around #'czm-lean4-info-buffer-redisplay))

(use-package eldoc-box
  :commands (eldoc-box-help-at-point)
  :bind
  (:map global-map ("C-c e" . eldoc-box-help-at-point)))

(defun czm-colorize-lean4-signature ()
  "Highlights the name of each required variable to a Lean4 theorem."
  (when
      (with-current-buffer eldoc-icebox-parent-buffer
        (or
         (eq major-mode 'lean4-mode)
         (eq (buffer-name) "*Lean Goal*")))
    (save-excursion
      (goto-char (point-min))
      (while (and (< (point) (point-max))
                  (not (eq (char-after (1+ (point))) ?\:)))
        (forward-list)
        (when (eq (char-before) ?\))
          (save-excursion
            (backward-list)
            (let ((inhibit-read-only t)
                  (start (point))
                  (end (save-excursion (forward-list) (point)))
                  (end-first-symbol (save-excursion (forward-word) (point)))
                  (end-symbols (save-excursion (when (search-forward " : " nil t) (- (point) 3)))))
              (when end-symbols
                (put-text-property start end 'face '(underline))
                                        ; shr-mark doesn't work anymore?
                (put-text-property (1+ start) end-symbols 'face '(highlight underline))))))))))

(defun czm-add-lean4-eldoc ()
  (when
      (with-current-buffer eldoc-icebox-parent-buffer
        (or
         (eq major-mode 'lean4-mode)
         (equal (buffer-name)
                "*Lean Goal*")))
    (add-hook 'eldoc-documentation-functions #'lean4-info-eldoc-function
              nil t)
    (eldoc-mode)))

(use-package eldoc-icebox
  :elpaca (:host github :repo "ultronozm/eldoc-icebox.el"
                 :depth nil)
  :bind (("C-c C-h" . eldoc-icebox-store)
         ("C-c C-n" . eldoc-icebox-toggle-display))
  :hook
  (eldoc-icebox-post-display . shrink-window-if-larger-than-buffer)
  (eldoc-icebox-post-display . czm-colorize-lean4-signature)
  (eldoc-icebox-post-display . czm-add-lean4-eldoc))
#+end_src
